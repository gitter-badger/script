#!/usr/bin/env expect
# bootable-usb.exp
# Author: Andy Bettisworth
# Description: Create a bootable USB with your preferred *nix flavour ISO

set usage "USAGE: bootable-usb.exp \[options\] DEVICE ISO"

set timeout -1
set device [lindex $argv 0]
set iso [lindex $argv 1]

proc exit_if_not_device { device } {
  if { [file type $device] != "blockSpecial" } {
    puts stderr "Missing block device argument"
    exit 3
  }
}

proc exit_if_not_file { my_file } {
  if { ![file exists $my_file] } {
    puts stderr "No such file found for $my_file"
    exit 3
  }
}

proc exit_if_not_enough_space { device iso } {
  set partition_table [exec sudo fdisk -l $device]
  regexp {total\s(\d*)} $partition_table -> sector_count
  regexp {\(logical/physical\):\s(\d*)} $partition_table -> sector_size

  set device_size [expr "$sector_count * $sector_size"]
  set iso_size [file size $iso]

  set remainder [expr "$device_size - $iso_size"]

  if {$remainder <= 0} {
    puts stderr "Not enough space on device $device"
    exit 4
  }
}

proc get_mount_point { device } {
  regexp {\/dev\/(\w*)} $device -> mount_point
  return $mount_point
}

proc unmount_device { mount_point } {
  set device_tree [exec lsblk]
  regexp {"$mount_point\(\\d\)"} $device_tree -> myvar
  puts $myvar
}

if { [string length $device] != 0 && \
     [string length $iso] != 0} {
  exit_if_not_file $device
  exit_if_not_device $device
  exit_if_not_file $iso
  exit_if_not_enough_space $device $iso

  set mount_point [get_mount_point $device]
  unmount_device $mount_point

  #spawn sudo fdisk $device
  #expect -re "password*"
  #expect_user -re "(.*)\n"
  #send $expect_out(1,string)
  #send_user "Creating a blank partition on $device...\n"
  #send "o\nn\np\n1\n\n\nw\n"
} else {
  puts stderr $usage
  exit 2
}

#   secondary_table = (sectors * ( peristence / 100.0 )).to_i
#   primary_table = (sectors - 1) - secondary_table

#   # part_cmd = 'o\nn\np\n1\n\n' + primary_table.to_s + '\n'
#   # part_cmd += 'n\np\n2\n\n\n' if secondary_table != 0
#   # part_cmd += 'w'

#   # ## > format partitions
#   # `sudo mkfs --type ntfs #{device}1`
#   # # `sudo mkfs --type ext4 #{device}2`
#   # /dev/sdX1 ntfs Village    ~80% GiB boot
#   # /dev/sdX2 ext4 casper-rw  ~20% GiB

#   # ## > label partitions
#   # `sudo ntfslabel #{device}1 Village`
#   # # `sudo e2label #{device}2 casper-rw`

#   # ## > Extract ISO
#   # `sudo rm -r /mnt/tmpiso`
#   # `sudo mkdir /mnt/tmpiso`
#   # `sudo mount -o loop #{iso} /mnt/tmpiso`

#   # ## > Copy ISO to Device
#   # ## En handle auto reattch device
#   # `rsync -aP /mnt/tmpiso/* /media/raist/Village`
#   # `sudo unlink /media/raist/Village/ubuntu`
#   # `sudo rm -r /mnt/tmpiso`

#   # ## > Setup GRUB bootloader
#   # `rm /media/raist/Village/boot/grub/loopback.cfg`
#   # `cp ~/.sync/.preseed/grub.cfg /media/raist/Village/boot/grub/grub.cfg`
#   # `sudo grub-install --no-floppy --root-directory=/media/raist/Village/ #{device}`
# end
