#!/usr/bin/env expect
# ftransfer.exp
# Author: Don Libes
# Description: Transfer a file over the network using telnet

if [info exists env(EXPECT_PROMPT)] {
  set prompt $env(EXPECT_PROMPT)
} else {
  set prompt "(%#|#|\\$) $"
}

set timeout -1
set verbose_flag 0

proc cmd {} {
  set CTRLZ \032

  send_user "command (g,p,? for more: "
  expect_user {
    g get_main
    p put_main
    c chdir
    v verbose_flag
    ~ {send "~"}
    "\\?" {
      send_user "?\n"
      send_user "~~g get file from remote system\n"
      send_user "~~p put file to remote system\n"
      send_user "~~c change/show directory on local system\n"
      send_user "~~~ send ~ to remote system\n"
      send_user "~~? this list\n"
      send_user "~~v verbose mode toggle (currently [verbose_status])\n"
      send_user "~~^Z suspend\n"
    }
    $CTRLZ {
      stty -raw echo
      exec kill STOP [pid]
      stty raw -echo
    }
    -re . (send_user "unknown command\n")
  }
  send_user "resuming session...\n"
}

proc verbose {} {
  global verbose_flag

  set verbose_flag [expr !$verbose_flag]
  send_user "verbose [verbose_status]\r\n"
}

proc verbose_status {} {
  global verbose_flag

  if $verbose_flag {
    return "on"
  } else {
    return "off"
  }
}

proc send_verbose {msg} {
  global verbose_flag

  if $verbose_flag {
    send_user $msg
  }
}

proc chdir {} {
  stty -raw echo
  send_user "c\n"
  send_user "current directory: [pwd], new directory: "
  expect_user -re "(.*)\n" {
    cd $expect_out(1,string)
  }
  stty raw -echo
}

spawn -noecho $env(SHELL)

send_user "Once loggend in, cd to directory to transfer\
              to/from and press: ~~\n"
send_user "One moment...\n"
interact ~~ cmd
